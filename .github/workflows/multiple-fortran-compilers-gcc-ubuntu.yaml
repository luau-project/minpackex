name: minpackex on Ubuntu
run-name: minpack (multiple Fortran compilers), minpackex (GCC) on Ubuntu
on: [push]

jobs:
  shared-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        USE_DOWNLOAD: ['OFF']
        CMAKE_BUILD_TYPE: ['Release', 'Debug']
        BUILD_STATIC_LIBS: ['ON', 'OFF']
        BUILD_TESTS: ['ON', 'OFF']
        TOOLCHAIN:
          - {COMPILER: gcc, VERSION: 13}
          - {COMPILER: intel, VERSION: '2024.1'}
          - {COMPILER: intel-classic, VERSION: '2021.10'}
          - {COMPILER: nvidia-hpc, VERSION: '23.11'}
        
    steps:

      - name: Checkout minpack-builder assets
        uses: actions/checkout@v4
        if: ${{ matrix.USE_DOWNLOAD=='OFF' }}
        with:
          repository: luau-project/minpack-builder
          ref: assets-ci-v1
          path: assets
      
      - name: Checkout minpack-builder repository to minpack-builder directory
        uses: actions/checkout@v4
        with:
          repository: luau-project/minpack-builder
          path: minpack-builder
      
      - name: Set shell variables to build and install directories
        run: |
          echo "MINPACK_BUILDDIR=$RUNNER_TEMP/build" >> $GITHUB_ENV
          echo "MINPACK_INSTALLDIR=$RUNNER_TEMP/install-gfortran" >> $GITHUB_ENV
      
      - name: Download minpack sources
        if: ${{ matrix.USE_DOWNLOAD=='OFF' }}
        run: for current_file in "disclaimer"  "chkder.f"  "dogleg.f"  "dpmpar.f"  "enorm.f"  "fdjac1.f"  "fdjac2.f"  "hybrd1.f"  "hybrd.f"  "hybrj1.f"  "hybrj.f"  "lmder1.f"  "lmder.f"  "lmdif1.f"  "lmdif.f"  "lmpar.f"  "lmstr1.f"  "lmstr.f"  "qform.f"  "qrfac.f"  "qrsolv.f"  "r1mpyq.f"  "r1updt.f"  "rwupdt.f"; do cp assets/${current_file} minpack-builder; done
      
      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.TOOLCHAIN.COMPILER }}
          version: ${{ matrix.TOOLCHAIN.VERSION }}
        
      - name: Configure the build of minpack (USE_DOWNLOAD=${{ matrix.USE_DOWNLOAD }})
        run: cmake -G "Unix Makefiles" -DBUILD_SHARED_LIBS=ON -DBUILD_STATIC_LIBS=${{ matrix.BUILD_STATIC_LIBS }} -DCMAKE_BUILD_TYPE=${{ matrix.CMAKE_BUILD_TYPE }} -DUSE_DOWNLOAD=${{ matrix.USE_DOWNLOAD }} --install-prefix $MINPACK_INSTALLDIR -S minpack-builder -B $MINPACK_BUILDDIR
      
      - name: Build minpack
        run: cmake --build $MINPACK_BUILDDIR --config ${{ matrix.CMAKE_BUILD_TYPE }}
      
      - name: Install minpack
        run: cmake --install $MINPACK_BUILDDIR --config ${{ matrix.CMAKE_BUILD_TYPE }}

      - name: Checkout minpackex repository to minpackex directory
        uses: actions/checkout@v4
        with:
          path: minpackex
      
      - name: Set shell variables to build and install directories (minpackex)
        run: |
          echo "MINPACKEX_BUILDDIR=$RUNNER_TEMP/minpackex-build" >> $GITHUB_ENV
          echo "MINPACKEX_INSTALLDIR=$RUNNER_TEMP/minpackex-install" >> $GITHUB_ENV
      
      - name: Configure the build of minpackex
        run: cmake -G "Unix Makefiles" "-DCMAKE_PREFIX_PATH=$MINPACK_INSTALLDIR" -DBUILD_TESTING=${{ matrix.BUILD_TESTS }} -DBUILD_SHARED_LIBS=ON -DBUILD_STATIC_LIBS=${{ matrix.BUILD_STATIC_LIBS }} -DCMAKE_BUILD_TYPE=${{ matrix.CMAKE_BUILD_TYPE }} --install-prefix $MINPACKEX_INSTALLDIR -S minpackex -B $MINPACKEX_BUILDDIR

      - name: Build minpackex
        run: cmake --build $MINPACKEX_BUILDDIR --config ${{ matrix.CMAKE_BUILD_TYPE }}
      
      - name: Test minpackex
        run: ctest --test-dir $MINPACKEX_BUILDDIR -C ${{ matrix.CMAKE_BUILD_TYPE }}

      - name: Install minpackex
        run: cmake --install $MINPACKEX_BUILDDIR --config ${{ matrix.CMAKE_BUILD_TYPE }}

  static-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        USE_DOWNLOAD: ['OFF']
        CMAKE_BUILD_TYPE: ['Release', 'Debug']
        BUILD_SHARED_LIBS: ['OFF']
        BUILD_TESTS: ['ON', 'OFF']
        TOOLCHAIN:
          - {COMPILER: gcc, VERSION: 13}
          - {COMPILER: intel, VERSION: '2024.1'}
          - {COMPILER: intel-classic, VERSION: '2021.10'}
          - {COMPILER: nvidia-hpc, VERSION: '23.11'}
        
    steps:

      - name: Checkout minpack-builder assets
        uses: actions/checkout@v4
        if: ${{ matrix.USE_DOWNLOAD=='OFF' }}
        with:
          repository: luau-project/minpack-builder
          ref: assets-ci-v1
          path: assets

      - name: Checkout minpack-builder repository to minpack-builder directory
        uses: actions/checkout@v4
        with:
          repository: luau-project/minpack-builder
          path: minpack-builder

      - name: Set shell variables to build and install directories
        run: |
          echo "MINPACK_BUILDDIR=$RUNNER_TEMP/build" >> $GITHUB_ENV
          echo "MINPACK_INSTALLDIR=$RUNNER_TEMP/install-gfortran" >> $GITHUB_ENV

      - name: Download minpack sources
        if: ${{ matrix.USE_DOWNLOAD=='OFF' }}
        run: for current_file in "disclaimer"  "chkder.f"  "dogleg.f"  "dpmpar.f"  "enorm.f"  "fdjac1.f"  "fdjac2.f"  "hybrd1.f"  "hybrd.f"  "hybrj1.f"  "hybrj.f"  "lmder1.f"  "lmder.f"  "lmdif1.f"  "lmdif.f"  "lmpar.f"  "lmstr1.f"  "lmstr.f"  "qform.f"  "qrfac.f"  "qrsolv.f"  "r1mpyq.f"  "r1updt.f"  "rwupdt.f"; do cp assets/${current_file} minpack-builder; done
      
      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.TOOLCHAIN.COMPILER }}
          version: ${{ matrix.TOOLCHAIN.VERSION }}
      
      - name: Configure the build of minpack (USE_DOWNLOAD=${{ matrix.USE_DOWNLOAD }})
        run: cmake -G "Unix Makefiles" -DBUILD_SHARED_LIBS=${{ matrix.BUILD_SHARED_LIBS }} -DBUILD_STATIC_LIBS=ON -DCMAKE_BUILD_TYPE=${{ matrix.CMAKE_BUILD_TYPE }} -DUSE_DOWNLOAD=${{ matrix.USE_DOWNLOAD }} --install-prefix $MINPACK_INSTALLDIR -S minpack-builder -B $MINPACK_BUILDDIR
      
      - name: Build minpack
        run: cmake --build $MINPACK_BUILDDIR --config ${{ matrix.CMAKE_BUILD_TYPE }}
      
      - name: Install minpack
        run: cmake --install $MINPACK_BUILDDIR --config ${{ matrix.CMAKE_BUILD_TYPE }}

      - name: Checkout minpackex repository to minpackex directory
        uses: actions/checkout@v4
        with:
          path: minpackex
      
      - name: Set shell variables to build and install directories (minpackex)
        run: |
          echo "MINPACKEX_BUILDDIR=$RUNNER_TEMP/minpackex-build" >> $GITHUB_ENV
          echo "MINPACKEX_INSTALLDIR=$RUNNER_TEMP/minpackex-install" >> $GITHUB_ENV
      
      - name: Configure the build of minpackex
        run: cmake -G "Unix Makefiles" "-DCMAKE_PREFIX_PATH=$MINPACK_INSTALLDIR" -DBUILD_TESTING=${{ matrix.BUILD_TESTS }} -DBUILD_SHARED_LIBS=${{ matrix.BUILD_SHARED_LIBS }} -DBUILD_STATIC_LIBS=ON -DCMAKE_BUILD_TYPE=${{ matrix.CMAKE_BUILD_TYPE }} --install-prefix $MINPACKEX_INSTALLDIR -S minpackex -B $MINPACKEX_BUILDDIR

      - name: Build minpackex
        run: cmake --build $MINPACKEX_BUILDDIR --config ${{ matrix.CMAKE_BUILD_TYPE }}
      
      - name: Test minpackex
        run: ctest --test-dir $MINPACKEX_BUILDDIR -C ${{ matrix.CMAKE_BUILD_TYPE }}

      - name: Install minpackex
        run: cmake --install $MINPACKEX_BUILDDIR --config ${{ matrix.CMAKE_BUILD_TYPE }}
